{"ast":null,"code":"var _jsxFileName = \"/takemura-lab/frontend/src/Loginform.js\",\n  _s = $RefreshSig$();\nimport \"./Loginform.css\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loginform = () => {\n  _s();\n  //ユーザー情報を格納するオブジェクトを生成する\n  const initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n  //フォームに入力された値を格納する状態変数を準備する\n  const [formValues, setFormValues] = useState(initialValues);\n  //エラーメッセージを格納するためのオブジェクト\n  const [formErrors, setFormErrors] = useState({});\n  //ログインボタンが押されたかどうかを判別するオブジェクト\n  const [isSubmit, setIsSubmit] = useState(false);\n  const navigate = useNavigate();\n  //フォームに入力された値を取り出す関数\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    //ログイン情報を発信する。\n    //バリデーションチェックする\n    setFormErrors(validate(formValues));\n    setIsSubmit(true);\n    setFormValues({});\n  };\n  const validate = values => {\n    const errors = {};\n    if (!values.username) {\n      errors.username = \"ユーザー名を入力してください\";\n    }\n    if (!values.password) {\n      errors.password = \"パスワードを入力してください\";\n    }\n    ;\n    return errors;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"log\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"loginform-background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-login\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"content-login\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"T-Lab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"usernameform\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"username\",\n              name: \"username\",\n              onChange: e => handleChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formErrors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"passwordform\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"password\",\n              name: \"password\",\n              onChange: e => handleChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorMsg\",\n            children: formErrors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/dashboard/1'),\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Loginform, \"bzDxxChF5Xs9l7h4nfnHbFGUkog=\", false, function () {\n  return [useNavigate];\n});\n_c = Loginform;\nexport default Loginform;\nvar _c;\n$RefreshReg$(_c, \"Loginform\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Loginform","_s","initialValues","username","password","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmit","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","validate","values","errors","class","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","className","onClick","_c","$RefreshReg$"],"sources":["/takemura-lab/frontend/src/Loginform.js"],"sourcesContent":["import \"./Loginform.css\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Loginform = () => {\n    //ユーザー情報を格納するオブジェクトを生成する\n    const initialValues = { username: \"\", password: \"\" };\n    //フォームに入力された値を格納する状態変数を準備する\n    const [formValues, setFormValues] = useState(initialValues);\n    //エラーメッセージを格納するためのオブジェクト\n    const [formErrors, setFormErrors] = useState({})\n    //ログインボタンが押されたかどうかを判別するオブジェクト\n    const [isSubmit, setIsSubmit] = useState(false);\n\n    const navigate = useNavigate();\n    //フォームに入力された値を取り出す関数\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormValues({ ...formValues, [name]: value });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        //ログイン情報を発信する。\n        //バリデーションチェックする\n        setFormErrors(validate(formValues));\n        setIsSubmit(true);\n        setFormValues({});\n    };\n\n    const validate = (values) => {\n        const errors = {};\n        if (!values.username) {\n            errors.username = \"ユーザー名を入力してください\";\n        }\n        if (!values.password) {\n            errors.password = \"パスワードを入力してください\";\n        };\n        return errors;\n    };\n    return (\n        <div class=\"log\">\n            <div class=\"loginform-background\">\n                <div class=\"card-login\">\n                    <div class=\"content-login\">\n                        <h2>T-Lab</h2>\n                        <h3>LOGIN</h3>\n                        <div class=\"usernameform\">\n                            <label>username</label>\n                            <input type=\"text\" placeholder=\"username\" name=\"username\" onChange={(e) => handleChange(e)} />\n                        </div>\n                        <p>{formErrors.username}</p>\n                        <div class=\"passwordform\">\n                            <label>password</label>\n                            <input type=\"text\" placeholder=\"password\" name=\"password\" onChange={(e) => handleChange(e)} />\n                        </div>\n                        <p className=\"errorMsg\">{formErrors.password}</p>\n                        {/* <button class=\"submitButton\" onClick={(e) => handleSubmit(e)}>login</button> */}\n                        <button onClick={() => navigate('/dashboard/1')}>login</button>\n                    </div>\n                </div>\n            </div >\n        </div>\n    );\n};\n\nexport default Loginform;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}