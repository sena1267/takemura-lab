[{"/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/index.js":"1","/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/App.js":"2","/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/reportWebVitals.js":"3","/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Loginform.js":"4","/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Dashboardview.js":"5","/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Dashboardroot.js":"6","/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Dashboardcontent.js":"7","/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Equipmentview.js":"8","/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Navigate.js":"9","/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Tab.js":"10"},{"size":634,"mtime":1684155330860,"results":"11","hashOfConfig":"12"},{"size":1741,"mtime":1684686999556,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1684139660463,"results":"14","hashOfConfig":"12"},{"size":2728,"mtime":1684497414079,"results":"15","hashOfConfig":"12"},{"size":10326,"mtime":1684678072619,"results":"16","hashOfConfig":"12"},{"size":3612,"mtime":1684687356829,"results":"17","hashOfConfig":"12"},{"size":758,"mtime":1684687056181,"results":"18","hashOfConfig":"12"},{"size":6711,"mtime":1684678222428,"results":"19","hashOfConfig":"12"},{"size":3776,"mtime":1684687332934,"results":"20","hashOfConfig":"12"},{"size":576,"mtime":1684687397469,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"siemqx",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/index.js",[],[],[],"/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/App.js",[],[],"/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/reportWebVitals.js",[],[],"/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Loginform.js",["54","55"],[],"import \"./Loginform.css\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Loginform = () => {\n    //ユーザー情報を格納するオブジェクトを生成する\n    const initialValues = { username: \"\", password: \"\" };\n    //フォームに入力された値を格納する状態変数を準備する\n    const [formValues, setFormValues] = useState(initialValues);\n    //エラーメッセージを格納するためのオブジェクト\n    const [formErrors, setFormErrors] = useState({})\n    //ログインボタンが押されたかどうかを判別するオブジェクト\n    const [isSubmit, setIsSubmit] = useState(false);\n\n    const navigate = useNavigate();\n    //フォームに入力された値を取り出す関数\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormValues({ ...formValues, [name]: value });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        //ログイン情報を発信する。\n        //バリデーションチェックする\n        setFormErrors(validate(formValues));\n        setIsSubmit(true);\n        setFormValues({});\n    };\n\n    const validate = (values) => {\n        const errors = {};\n        if (!values.username) {\n            errors.username = \"ユーザー名を入力してください\";\n        }\n        if (!values.password) {\n            errors.password = \"パスワードを入力してください\";\n        };\n        return errors;\n    };\n    return (\n        <div class=\"log\">\n            <div class=\"loginform-background\">\n                <div class=\"card-login\">\n                    <div class=\"content-login\">\n                        <h2>T-Lab</h2>\n                        <h3>LOGIN</h3>\n                        <div class=\"usernameform\">\n                            <label>username</label>\n                            <input type=\"text\" placeholder=\"username\" name=\"username\" onChange={(e) => handleChange(e)} />\n                        </div>\n                        <p>{formErrors.username}</p>\n                        <div class=\"passwordform\">\n                            <label>password</label>\n                            <input type=\"text\" placeholder=\"password\" name=\"password\" onChange={(e) => handleChange(e)} />\n                        </div>\n                        <p class=\"errorMsg\">{formErrors.password}</p>\n                        {/* <button class=\"submitButton\" onClick={(e) => handleSubmit(e)}>login</button> */}\n                        <button onClick={() => navigate('/dashboard/1')}>login</button>\n                    </div>\n                </div>\n            </div >\n        </div>\n    );\n};\n\nexport default Loginform;","/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Dashboardview.js",[],[],"/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Dashboardroot.js",["56"],[],"/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Dashboardcontent.js",[],[],"/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Equipmentview.js",[],[],"/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Navigate.js",["57","58","59"],[],"/Users/furuyatatsuma/Desktop/takemura-lab/frontend/src/Tab.js",[],[],{"ruleId":"60","severity":1,"message":"61","line":13,"column":12,"nodeType":"62","messageId":"63","endLine":13,"endColumn":20},{"ruleId":"60","severity":1,"message":"64","line":21,"column":11,"nodeType":"62","messageId":"63","endLine":21,"endColumn":23},{"ruleId":"65","severity":1,"message":"66","line":55,"column":41,"nodeType":"67","endLine":56,"endColumn":134},{"ruleId":"65","severity":1,"message":"66","line":42,"column":25,"nodeType":"67","endLine":42,"endColumn":45},{"ruleId":"65","severity":1,"message":"66","line":64,"column":29,"nodeType":"67","endLine":64,"endColumn":68},{"ruleId":"65","severity":1,"message":"66","line":69,"column":29,"nodeType":"67","endLine":69,"endColumn":69},"no-unused-vars","'isSubmit' is assigned a value but never used.","Identifier","unusedVar","'handleSubmit' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]